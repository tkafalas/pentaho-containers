# Downloaded artifacts get stored here
docker.server.artifactCache=./artifactCache

# Preset Variables are as follows:
#            ${version} = The version of the base server zip (ie: 9.2.0.0)
#         ${distNumber} = the build number of base server zip (ie: 657)
#       ${patchVersion} = The version of the patch file (ie: 9.2.0.3)
#    ${patchDistNumber} = The build number of the patch file (ie: 828)
#            ${edition} = ce or ee
#           ${pluginId} = 3 character plugin ID (ie: paz, pdd, or pir)
#              ${karId} = The unique ID for a kar. (ie: The kar file used on the command line such as cdh61)
#
# Derived Variables are as follows:
#                ${url} = The url to use (either docker.server.serverArtifactUrl, docker.server.serverPatchUrl, or
#                         docker.server.serverPluginUrl, which must be defined in this file)
#           ${fileName} = The name of file ( either docker.server.serverArtifactFileName, docker.server.serverPatchArtifactFileName, or
#                         docker.server.serverPluginFileName )
#      ${version} = Special mapped value to convert version to whatever is needed.  Defined by the docker.server.version
#                         section of this file.
#       ${outputFolder} = defined by the system.  Contains the output folder for the curl command
docker.download.host.prefix=file:///env/ws/pentaho-containers/src/test/testArtifacts

docker.pdi.pdiArtifactFileName=pdi-${edition}-client-${version}${distNumber}${dist}.zip
docker.pdi.pdiArtifactUrl=${docker.download.host.prefix}/${version}/${distNumber}/${docker.pdi.pdiArtifactFileName}

docker.server.serverArtifactFileName=mock-pentaho-server-${edition}-${version}${fileDistNumber}${dist}.zip
docker.server.serverArtifactUrl=${docker.download.host.prefix}/${version}/${distNumber}/${docker.server.serverArtifactFileName}

docker.server.serverPluginFileName=mock-${pluginId}-plugin-${edition}-${version}${fileDistNumber}${dist}.zip
docker.server.serverPluginUrl=${docker.download.host.prefix}/${version}/${distNumber}/${docker.server.serverPluginFileName}

docker.server.serverPatchFileName=mock-PentahoServer-SP-${patchVersion}-${patchDistNumber}.bin
docker.server.serverPatchUrl=${docker.download.host.prefix}/${patchVersion}/${patchDistNumber}/${docker.server.serverPatchFileName}

docker.server.karFileName=pentaho-hadoop-shims-${edition}-${karId}-kar-${karDistNumber}${dist}.zip
docker.server.karUrl=${docker.download.host.prefix}/${version}/${distNumber}/${docker.server.karFileName}

docker.server.curlCommand=curl ${url} -o ${outputFolder}/${fileName}

#
# set fileDistNumber to the distNumber, or blank if the distNumber="latest"
docker.server.var.0.fileDistNumber.="${distNumber}" === "latest" 
docker.server.var.1.fileDistNumber.-${distNumber}="${distNumber}" != "latest" 
#set dist to the distNumber, or blank if the distNumber="latest"
docker.server.var.0.dist.="${distNumber}" === "latest"
docker.server.var.1.dist.-dist="${distNumber}" != "latest"

